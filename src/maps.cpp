
#include "maps.hpp"

const std::array<std::vector<uint32_t>, 9> INIT_ROW_GROUPS = {{
    { 0,  1,  2,  3,  4,  5,  6,  7,  8}, \
    { 9, 10, 11, 12, 13, 14, 15, 16, 17}, \
    {18, 19, 20, 21, 22, 23, 24, 25, 26}, \
    {27, 28, 29, 30, 31, 32, 33, 34, 35}, \
    {36, 37, 38, 39, 40, 41, 42, 43, 44}, \
    {45, 46, 47, 48, 49, 50, 51, 52, 53}, \
    {54, 55, 56, 57, 58, 59, 60, 61, 62}, \
    {63, 64, 65, 66, 67, 68, 69, 70, 71}, \
    {72, 73, 74, 75, 76, 77, 78, 79, 80}, \
}};
const std::array<std::vector<uint32_t>, 9> INIT_COL_GROUPS = {{
    { 0,  9, 18, 27, 36, 45, 54, 63, 72}, \
    { 1, 10, 19, 28, 37, 46, 55, 64, 73}, \
    { 2, 11, 20, 29, 38, 47, 56, 65, 74}, \
    { 3, 12, 21, 30, 39, 48, 57, 66, 75}, \
    { 4, 13, 22, 31, 40, 49, 58, 67, 76}, \
    { 5, 14, 23, 32, 41, 50, 59, 68, 77}, \
    { 6, 15, 24, 33, 42, 51, 60, 69, 78}, \
    { 7, 16, 25, 34, 43, 52, 61, 70, 79}, \
    { 8, 17, 26, 35, 44, 53, 62, 71, 80}, \
}};
const std::array<std::vector<uint32_t>, 9> INIT_BLK_GROUPS = {{
    { 0,  1,  2,  9, 10, 11, 18, 19, 20}, \
    { 3,  4,  5, 12, 13, 14, 21, 22, 23}, \
    { 6,  7,  8, 15, 16, 17, 24, 25, 26}, \
    {27, 28, 29, 36, 37, 38, 45, 46, 47}, \
    {30, 31, 32, 39, 40, 41, 48, 49, 50}, \
    {33, 34, 35, 42, 43, 44, 51, 52, 53}, \
    {54, 55, 56, 63, 64, 65, 72, 73, 74}, \
    {57, 58, 59, 66, 67, 68, 75, 76, 77}, \
    {60, 61, 62, 69, 70, 71, 78, 79, 80}, \
}};
const std::vector<uint32_t> INIT_UNSOLVED_INDICES = {
     0,  1,  2,  3,  4,  5,  6,  7,  8, \
     9, 10, 11, 12, 13, 14, 15, 16, 17, \
    18, 19, 20, 21, 22, 23, 24, 25, 26, \
    27, 28, 29, 30, 31, 32, 33, 34, 35, \
    36, 37, 38, 39, 40, 41, 42, 43, 44, \
    45, 46, 47, 48, 49, 50, 51, 52, 53, \
    54, 55, 56, 57, 58, 59, 60, 61, 62, \
    63, 64, 65, 66, 67, 68, 69, 70, 71, \
    72, 73, 74, 75, 76, 77, 78, 79, 80, \
};

/**
 * @brief Convert flat indices into row/col/blk indices
 * 
 *  (row, col, blk) of ith cell -> FLAT_TO_ROW_COL_BLK[i]
 * 
 */
const std::array<std::array<uint32_t, 3>, 81> FLAT_TO_ROW_COL_BLK = {{
    {0, 0, 0}, {0, 1, 0}, {0, 2, 0}, {0, 3, 1}, {0, 4, 1}, {0, 5, 1}, {0, 6, 2}, {0, 7, 2}, {0, 8, 2}, \
    {1, 0, 0}, {1, 1, 0}, {1, 2, 0}, {1, 3, 1}, {1, 4, 1}, {1, 5, 1}, {1, 6, 2}, {1, 7, 2}, {1, 8, 2}, \
    {2, 0, 0}, {2, 1, 0}, {2, 2, 0}, {2, 3, 1}, {2, 4, 1}, {2, 5, 1}, {2, 6, 2}, {2, 7, 2}, {2, 8, 2}, \
    {3, 0, 3}, {3, 1, 3}, {3, 2, 3}, {3, 3, 4}, {3, 4, 4}, {3, 5, 4}, {3, 6, 5}, {3, 7, 5}, {3, 8, 5}, \
    {4, 0, 3}, {4, 1, 3}, {4, 2, 3}, {4, 3, 4}, {4, 4, 4}, {4, 5, 4}, {4, 6, 5}, {4, 7, 5}, {4, 8, 5}, \
    {5, 0, 3}, {5, 1, 3}, {5, 2, 3}, {5, 3, 4}, {5, 4, 4}, {5, 5, 4}, {5, 6, 5}, {5, 7, 5}, {5, 8, 5}, \
    {6, 0, 6}, {6, 1, 6}, {6, 2, 6}, {6, 3, 7}, {6, 4, 7}, {6, 5, 7}, {6, 6, 8}, {6, 7, 8}, {6, 8, 8}, \
    {7, 0, 6}, {7, 1, 6}, {7, 2, 6}, {7, 3, 7}, {7, 4, 7}, {7, 5, 7}, {7, 6, 8}, {7, 7, 8}, {7, 8, 8}, \
    {8, 0, 6}, {8, 1, 6}, {8, 2, 6}, {8, 3, 7}, {8, 4, 7}, {8, 5, 7}, {8, 6, 8}, {8, 7, 8}, {8, 8, 8}, \
}};

/**
 * @brief Convert row/col/blk indices to flat puzzle indices
 * 
 *  ith row contains the ROW_TO_FLAT[i] puzzle indices
 * 
 */
const std::array<std::array<uint32_t, 9>, 9> ROW_TO_FLAT = {{
    { 0,  1,  2,  3,  4,  5,  6,  7,  8}, \
    { 9, 10, 11, 12, 13, 14, 15, 16, 17}, \
    {18, 19, 20, 21, 22, 23, 24, 25, 26}, \
    {27, 28, 29, 30, 31, 32, 33, 34, 35}, \
    {36, 37, 38, 39, 40, 41, 42, 43, 44}, \
    {45, 46, 47, 48, 49, 50, 51, 52, 53}, \
    {54, 55, 56, 57, 58, 59, 60, 61, 62}, \
    {63, 64, 65, 66, 67, 68, 69, 70, 71}, \
    {72, 73, 74, 75, 76, 77, 78, 79, 80}, \
}};
const std::array<std::array<uint32_t, 9>, 9> COL_TO_FLAT = {{
    { 0,  9, 18, 27, 36, 45, 54, 63, 72}, \
    { 1, 10, 19, 28, 37, 46, 55, 64, 73}, \
    { 2, 11, 20, 29, 38, 47, 56, 65, 74}, \
    { 3, 12, 21, 30, 39, 48, 57, 66, 75}, \
    { 4, 13, 22, 31, 40, 49, 58, 67, 76}, \
    { 5, 14, 23, 32, 41, 50, 59, 68, 77}, \
    { 6, 15, 24, 33, 42, 51, 60, 69, 78}, \
    { 7, 16, 25, 34, 43, 52, 61, 70, 79}, \
    { 8, 17, 26, 35, 44, 53, 62, 71, 80}, \
}};
const std::array<std::array<uint32_t, 9>, 9> BLK_TO_FLAT = {{
    { 0,  1,  2,  9, 10, 11, 18, 19, 20}, \
    { 3,  4,  5, 12, 13, 14, 21, 22, 23}, \
    { 6,  7,  8, 15, 16, 17, 24, 25, 26}, \
    {27, 28, 29, 36, 37, 38, 45, 46, 47}, \
    {30, 31, 32, 39, 40, 41, 48, 49, 50}, \
    {33, 34, 35, 42, 43, 44, 51, 52, 53}, \
    {54, 55, 56, 63, 64, 65, 72, 73, 74}, \
    {57, 58, 59, 66, 67, 68, 75, 76, 77}, \
    {60, 61, 62, 69, 70, 71, 78, 79, 80}, \
}};

/**
 * @brief Which row/col/blk is included in a given (col/blk)/(row/blk)/(row/col)
 * 
 * Notably:
 *      ROW_TO_COL = COL_TO_ROW
 *      ROW_TO_BLK = BLK_TO_ROW
 */
const std::array<std::array<uint32_t, 9>, 9> ROW_TO_COL = {{
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
}};
const std::array<std::array<uint32_t, 3>, 9> ROW_TO_BLK = {{
    {0, 1, 2}, \
    {0, 1, 2}, \
    {0, 1, 2}, \
    {3, 4, 5}, \
    {3, 4, 5}, \
    {3, 4, 5}, \
    {6, 7, 8}, \
    {6, 7, 8}, \
    {6, 7, 8}, \
}};
const std::array<std::array<uint32_t, 9>, 9> COL_TO_ROW = {{
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
    {0, 1, 2, 3, 4, 5, 6, 7, 8}, \
}};
const std::array<std::array<uint32_t, 3>, 9> COL_TO_BLK = {{
    {0, 3, 6}, \
    {0, 3, 6}, \
    {0, 3, 6}, \
    {1, 4, 7}, \
    {1, 4, 7}, \
    {1, 4, 7}, \
    {2, 5, 8}, \
    {2, 5, 8}, \
    {2, 5, 8}, \
}};
const std::array<std::array<uint32_t, 3>, 9> BLK_TO_ROW = {{
    {0, 1, 2}, \
    {0, 1, 2}, \
    {0, 1, 2}, \
    {3, 4, 5}, \
    {3, 4, 5}, \
    {3, 4, 5}, \
    {6, 7, 8}, \
    {6, 7, 8}, \
    {6, 7, 8}, \
}};
const std::array<std::array<uint32_t, 3>, 9> BLK_TO_COL = {{
    {0, 1, 2}, \
    {3, 4, 5}, \
    {6, 7, 8}, \
    {0, 1, 2}, \
    {3, 4, 5}, \
    {6, 7, 8}, \
    {0, 1, 2}, \
    {3, 4, 5}, \
    {6, 7, 8}, \
}};
